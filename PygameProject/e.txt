def check_visible(player):
    start_angle = player.angle - 30
    vec_arr = []
    for i in range(60):
        angle = math.radians(start_angle + i)
        x0, y0 = player.rect.center
        x = math.cos(angle) * VIEW
        y = math.sin(angle) * VIEW
        vec = vec2(x, y)
        s = (vec.x ** 2 + vec.y ** 2) ** 0.5
        for sprite in object_block_visible_group:
            rect = sprite.rect
            if rect.clipline(x0, y0, x0 + x, y0 - y):
                rect = rect.clipline(x0, y0, x0 + x, y0 - y)

                vec_1 = vec2(rect[0][0] - x0, y0 - rect[0][1])
                vec_2 = vec2(rect[1][0] - x0, y0 - rect[1][1])
                s1 = (vec_1.x ** 2 + vec_1.y ** 2) ** 0.5
                s2 = (vec_2.x ** 2 + vec_2.y ** 2) ** 0.5

                if min(s1, s2) < s:
                    vec = vec_1 if s1 <= s2 else vec_2
                    s = min(s1, s2)

        vec_arr.append(vec)
        print()
    player.view.set_view(vec_arr)

    for object in not_visible_object_group:
        vec = vec2(object.rect.centerx - player.rect.centerx,
                   object.rect.centery - player.rect.centery)
        s = (vec.x ** 2 + vec.y ** 2) ** 0.5
        if s > player.view.r:
            continue
        flag = 0
        for sprite in object_block_visible_group:
            rect = sprite.rect
            p_x, p_y = player.rect.center
            o_x, o_y = object.rect.center
            if rect.clipline(p_x, p_y, o_x, o_y):
                flag = 1
                break
        if flag:
            continue
        visible_object_group.add(object)